# -*- coding: utf-8 -*-
"""simulacao_investimentos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1diXlA9Rj5yqozj7ZwTye-TBpLT0vY8fu

# Simulação de carteiras

Para fins de simplificação e estudos, apenas um aporte foi feito em cada ação e todos no mesmo dia

**1. Importando as bibliotecas**
"""

import yfinance as yf
import pandas as pd
import numpy as np

"""**2. Configuração da carteira**"""

compras = {'VALE3.SA': 14000, 'WEGE3.SA': 13000, 'BRKM5.SA':11000, 'CMIG4.SA': 10000,
           'GGBR4.SA': 8000, 'ELET3.SA': 7000, 'CPLE6.SA': 5000, 'PETR4.SA': 10000, 'KLBN11.SA': 10000}

list(compras.keys())

sum(compras.values())

"""**3. Importando os dados**"""

inicio = '2020-01-01'
fim = '2024-02-08'

precos = yf.download(list(compras.keys()), start = inicio, end = fim, progress = False)['Adj Close']
precos

"""**4. Simulando uma carteira fictícia**"""

primeiro = precos.iloc[0]
primeiro

list(compras.keys())

compras_df = pd.Series(data = compras, index = list(compras.keys()))
compras_df

"""**5. Descobrindo a quantidade de papéis comprados de cada ativo**"""

qtd_acoes = round(compras_df/primeiro, 0)
qtd_acoes

PL = precos * qtd_acoes
PL

PL['PL Total'] = PL.sum(axis = 1)
PL

PL.head()

PL.tail()

"""**6. Comparação de rentabilidade com o IBOV**"""

ibov = yf.download('^BVSP', start = inicio, end = fim)['Adj Close']
ibov.head()

ibov = pd.DataFrame(ibov)
ibov

ibov.rename(columns = {'Adj Close': 'IBOV'}, inplace = True)
ibov

"""**7. Unindo as tabelas da carteira com o IBOV**"""

consolidado = pd.merge(ibov, PL, how = 'inner', on = 'Date')
consolidado

"""**8. Normalizar os dados para ajustar as escalas**"""

consolidado_ajustado = consolidado/consolidado.iloc[0]
consolidado_ajustado

consolidado_ajustado.plot()

consolidado_ajustado[['IBOV', 'PL Total']].plot();

"""# **FUNÇÃO PARA SIMULAÇÃO DE CARTEIRA**"""

def simulacao(inicio, fim, carteira):
  precos = yf.download(list(carteira.keys()), start = inicio, end = fim, progress = False)['Adj Close']
  primeiro = precos.iloc[0]
  compras_df = pd.Series(data = carteira, index = list(carteira.keys()))
  qtd_acoes = compras_df/primeiro
  qtd_acoes = round(qtd_acoes,0)
  PL = precos*qtd_acoes
  PL['PL Total'] = PL.sum(axis = 1)
  ibov = yf.download('^BVSP', start = inicio, end = fim, progress = False)
  ibov.rename(columns = {'Adj Close': 'IBOV'}, inplace = True)
  ibov.drop(ibov.columns[[0,1,2,3,5]], axis = 1, inplace = True)
  consolidado = pd.merge(ibov, PL, how = 'inner', on = 'Date')
  consolidado_adj = consolidado/consolidado.iloc[0]
  consolidado_adj[['IBOV', 'PL Total']].plot(figsize = (8,6));

portfolio = {'ARZZ3.SA': 5000,'BBSE3.SA': 9500, 'USIM5.SA': 5500 }

simulacao(inicio, fim, portfolio)